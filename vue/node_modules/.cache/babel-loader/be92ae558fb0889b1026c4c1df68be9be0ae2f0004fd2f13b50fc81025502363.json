{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { FileContentResponsesPage, Files, VectorStoreFilesPage } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.files = new FilesAPI.Files(this._client);\n    this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n  }\n  /**\n   * Create a vector store.\n   */\n  create(body, options) {\n    return this._client.post('/vector_stores', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a vector store.\n   */\n  retrieve(vectorStoreId, options) {\n    return this._client.get(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a vector store.\n   */\n  update(vectorStoreId, body, options) {\n    return this._client.post(`/vector_stores/${vectorStoreId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a vector store.\n   */\n  del(vectorStoreId, options) {\n    return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Search a vector store for relevant chunks based on a query and file attributes\n   * filter.\n   */\n  search(vectorStoreId, body, options) {\n    return this._client.getAPIList(`/vector_stores/${vectorStoreId}/search`, VectorStoreSearchResponsesPage, {\n      body,\n      method: 'post',\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class VectorStoresPage extends CursorPage {}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class VectorStoreSearchResponsesPage extends Page {}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileContentResponsesPage = FileContentResponsesPage;\nVectorStores.FileBatches = FileBatches;","map":{"version":3,"names":["APIResource","isRequestOptions","FileBatchesAPI","FileBatches","FilesAPI","FileContentResponsesPage","Files","VectorStoreFilesPage","CursorPage","Page","VectorStores","constructor","files","_client","fileBatches","create","body","options","post","headers","retrieve","vectorStoreId","get","update","list","query","getAPIList","VectorStoresPage","del","delete","search","VectorStoreSearchResponsesPage","method"],"sources":["../../src/resources/vector-stores/vector-stores.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}