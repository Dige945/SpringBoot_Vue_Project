{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, withKeys as _withKeys, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\",\n  style: {\n    \"width\": \"1000px\",\n    \"height\": \"600px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"chat-box\"\n};\nconst _hoisted_3 = {\n  class: \"messages\",\n  ref: \"messageContainer\"\n};\nconst _hoisted_4 = {\n  class: \"message-content\"\n};\nconst _hoisted_5 = {\n  class: \"input-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role === 'user' ? 'user-message' : 'ai-message'])\n    }, [_createVNode(_component_el_avatar, {\n      icon: message.role === 'user' ? $setup.UserFilled : $setup.Service,\n      class: _normalizeClass(message.role === 'user' ? 'user-avatar' : 'ai-avatar')\n    }, null, 8 /* PROPS */, [\"icon\", \"class\"]), _createElementVNode(\"div\", _hoisted_4, _toDisplayString(message.content), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n    modelValue: $setup.userInput,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userInput = $event),\n    type: \"textarea\",\n    rows: 3,\n    placeholder: \"请输入您的问题...\",\n    onKeyup: _withKeys(_withModifiers($setup.sendMessage, [\"ctrl\"]), [\"enter\"])\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    loading: $setup.loading,\n    onClick: $setup.sendMessage\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 发送 (Ctrl + Enter) \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"onClick\"])])])]);\n}","map":{"version":3,"names":["class","style","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","role","_createVNode","_component_el_avatar","icon","UserFilled","Service","_hoisted_4","_toDisplayString","content","_hoisted_5","_component_el_input","modelValue","userInput","_cache","$event","type","rows","placeholder","onKeyup","_withKeys","_withModifiers","sendMessage","_component_el_button","loading","onClick","default","_withCtx","_createTextVNode","_"],"sources":["D:\\CODING\\IDEA-coding\\SpringDemo\\SpringVue\\Vue\\src\\views\\Chat.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\" style=\"width: 1000px;height: 600px\">\r\n    <div class=\"chat-box\">\r\n      <div class=\"messages\" ref=\"messageContainer\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\"\r\n             :class=\"['message', message.role === 'user' ? 'user-message' : 'ai-message']\">\r\n          <el-avatar :icon=\"message.role === 'user' ? UserFilled : Service\"\r\n                     :class=\"message.role === 'user' ? 'user-avatar' : 'ai-avatar'\" />\r\n          <div class=\"message-content\">{{ message.content }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-area\">\r\n        <el-input\r\n            v-model=\"userInput\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入您的问题...\"\r\n            @keyup.enter.ctrl=\"sendMessage\"\r\n        />\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"sendMessage\">\r\n          发送 (Ctrl + Enter)\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, nextTick } from 'vue';\r\nimport { UserFilled, Service } from '@element-plus/icons-vue';\r\nimport main from \"@/api/DeepSeekApi\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nexport default {\r\n  name: 'Chat',\r\n  setup() {\r\n    const messages = ref([]);\r\n    const userInput = ref('');\r\n    const loading = ref(false);\r\n    const messageContainer = ref(null);\r\n\r\n    const scrollToBottom = async () => {\r\n      await nextTick();\r\n      const container = messageContainer.value;\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n      if (!userInput.value.trim() || loading.value) return;\r\n\r\n      // 添加用户消息\r\n      messages.value.push({\r\n        role: 'user',\r\n        content: userInput.value.trim()\r\n      });\r\n\r\n      loading.value = true;\r\n      try {\r\n        // 调用 API\r\n        const response = await main(userInput.value.trim());\r\n\r\n        // 添加 AI 回复\r\n        messages.value.push({\r\n          role: 'assistant',\r\n          content: response\r\n        });\r\n\r\n        userInput.value = '';\r\n        await scrollToBottom();\r\n      } catch (error) {\r\n        console.error('发送消息失败:', error);\r\n        ElMessage.error('发送消息失败，请重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 添加欢迎消息\r\n      messages.value.push({\r\n        role: 'assistant',\r\n        content: '你好！我是 AI 助手，有什么我可以帮你的吗？'\r\n      });\r\n    });\r\n\r\n    return {\r\n      messages,\r\n      userInput,\r\n      loading,\r\n      messageContainer,\r\n      scrollToBottom,\r\n      sendMessage,\r\n      UserFilled,\r\n      Service\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  height: calc(100vh - 80px);\r\n}\r\n\r\n.chat-box {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  align-items: flex-start;\r\n}\r\n\r\n.user-message {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.message-content {\r\n  margin: 0 12px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  max-width: 70%;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.user-message .message-content {\r\n  background-color: #409eff;\r\n  color: white;\r\n}\r\n\r\n.ai-message .message-content {\r\n  background-color: #f4f4f5;\r\n  color: #333;\r\n}\r\n\r\n.input-area {\r\n  padding: 20px;\r\n  border-top: 1px solid #dcdfe6;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.input-area .el-textarea {\r\n  flex: 1;\r\n}\r\n\r\n.user-avatar {\r\n  background-color: #409eff;\r\n  color: white;\r\n}\r\n\r\n.ai-avatar {\r\n  background-color: #67c23a;\r\n  color: white;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC,gBAAgB;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;EACrBD,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC,UAAU;EAACE,GAAG,EAAC;;;EAKjBF,KAAK,EAAC;AAAiB;;EAG3BA,KAAK,EAAC;AAAY;;;;;uBAV3BG,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJD,mBAAA,CAOM,OAPNE,UAOM,I,kBANJJ,mBAAA,CAKMK,SAAA,QATdC,WAAA,CAIwCC,MAAA,CAAAC,QAAQ,EAJhD,CAIqBC,OAAO,EAAEC,KAAK;yBAA3BV,mBAAA,CAKM;MALqCW,GAAG,EAAED,KAAK;MAC/Cb,KAAK,EALnBe,eAAA,aAKiCH,OAAO,CAACI,IAAI;QACnCC,YAAA,CAC4EC,oBAAA;MADhEC,IAAI,EAAEP,OAAO,CAACI,IAAI,cAAcN,MAAA,CAAAU,UAAU,GAAGV,MAAA,CAAAW,OAAO;MACpDrB,KAAK,EAP3Be,eAAA,CAO6BH,OAAO,CAACI,IAAI;gDAC/BX,mBAAA,CAAwD,OAAxDiB,UAAwD,EAAAC,gBAAA,CAAxBX,OAAO,CAACY,OAAO,iB;0DAGnDnB,mBAAA,CAWM,OAXNoB,UAWM,GAVJR,YAAA,CAMES,mBAAA;IAlBVC,UAAA,EAaqBjB,MAAA,CAAAkB,SAAS;IAb9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaqBpB,MAAA,CAAAkB,SAAS,GAAAE,MAAA;IAClBC,IAAI,EAAC,UAAU;IACdC,IAAI,EAAE,CAAC;IACRC,WAAW,EAAC,YAAY;IACvBC,OAAK,EAjBlBC,SAAA,CAAAC,cAAA,CAiB+B1B,MAAA,CAAA2B,WAAW;sDAElCpB,YAAA,CAEYqB,oBAAA;IAFDP,IAAI,EAAC,SAAS;IAAEQ,OAAO,EAAE7B,MAAA,CAAA6B,OAAO;IAAGC,OAAK,EAAE9B,MAAA,CAAA2B;;IAnB7DI,OAAA,EAAAC,QAAA,CAmB0E,MAElEb,MAAA,QAAAA,MAAA,OArBRc,gBAAA,CAmB0E,qBAElE,E;IArBRC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}