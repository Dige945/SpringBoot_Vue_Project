{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, nextTick } from 'vue';\nimport { UserFilled, Service } from '@element-plus/icons-vue';\nimport main from \"@/api/DeepSeekApi\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  name: 'Chat',\n  setup() {\n    const messages = ref([]);\n    const userInput = ref('');\n    const loading = ref(false);\n    const messageContainer = ref(null);\n    const scrollToBottom = async () => {\n      await nextTick();\n      const container = messageContainer.value;\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    };\n    const sendMessage = async () => {\n      if (!userInput.value.trim() || loading.value) return;\n\n      // 添加用户消息\n      messages.value.push({\n        role: 'user',\n        content: userInput.value.trim()\n      });\n      loading.value = true;\n      try {\n        // 调用 API\n        const response = await main(userInput.value.trim());\n\n        // 添加 AI 回复\n        messages.value.push({\n          role: 'assistant',\n          content: response\n        });\n        userInput.value = '';\n        await scrollToBottom();\n      } catch (error) {\n        console.error('发送消息失败:', error);\n        ElMessage.error('发送消息失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      // 添加欢迎消息\n      messages.value.push({\n        role: 'assistant',\n        content: '你好！我是 AI 助手，有什么我可以帮你的吗？'\n      });\n    });\n    return {\n      messages,\n      userInput,\n      loading,\n      messageContainer,\n      scrollToBottom,\n      sendMessage,\n      UserFilled,\n      Service\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","UserFilled","Service","main","ElMessage","name","setup","messages","userInput","loading","messageContainer","scrollToBottom","container","value","scrollTop","scrollHeight","sendMessage","trim","push","role","content","response","error","console"],"sources":["D:\\CODING\\IDEA-coding\\SpringDemo\\SpringVue\\Vue\\src\\views\\Chat.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\" style=\"width: 1000px;height: 600px\">\r\n    <div class=\"chat-box\">\r\n      <div class=\"messages\" ref=\"messageContainer\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\"\r\n             :class=\"['message', message.role === 'user' ? 'user-message' : 'ai-message']\">\r\n          <el-avatar :icon=\"message.role === 'user' ? UserFilled : Service\"\r\n                     :class=\"message.role === 'user' ? 'user-avatar' : 'ai-avatar'\" />\r\n          <div class=\"message-content\">{{ message.content }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-area\">\r\n        <el-input\r\n            v-model=\"userInput\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入您的问题...\"\r\n            @keyup.enter.ctrl=\"sendMessage\"\r\n        />\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"sendMessage\">\r\n          发送 (Ctrl + Enter)\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, nextTick } from 'vue';\r\nimport { UserFilled, Service } from '@element-plus/icons-vue';\r\nimport main from \"@/api/DeepSeekApi\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nexport default {\r\n  name: 'Chat',\r\n  setup() {\r\n    const messages = ref([]);\r\n    const userInput = ref('');\r\n    const loading = ref(false);\r\n    const messageContainer = ref(null);\r\n\r\n    const scrollToBottom = async () => {\r\n      await nextTick();\r\n      const container = messageContainer.value;\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n      if (!userInput.value.trim() || loading.value) return;\r\n\r\n      // 添加用户消息\r\n      messages.value.push({\r\n        role: 'user',\r\n        content: userInput.value.trim()\r\n      });\r\n\r\n      loading.value = true;\r\n      try {\r\n        // 调用 API\r\n        const response = await main(userInput.value.trim());\r\n\r\n        // 添加 AI 回复\r\n        messages.value.push({\r\n          role: 'assistant',\r\n          content: response\r\n        });\r\n\r\n        userInput.value = '';\r\n        await scrollToBottom();\r\n      } catch (error) {\r\n        console.error('发送消息失败:', error);\r\n        ElMessage.error('发送消息失败，请重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 添加欢迎消息\r\n      messages.value.push({\r\n        role: 'assistant',\r\n        content: '你好！我是 AI 助手，有什么我可以帮你的吗？'\r\n      });\r\n    });\r\n\r\n    return {\r\n      messages,\r\n      userInput,\r\n      loading,\r\n      messageContainer,\r\n      scrollToBottom,\r\n      sendMessage,\r\n      UserFilled,\r\n      Service\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  height: calc(100vh - 80px);\r\n}\r\n\r\n.chat-box {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  align-items: flex-start;\r\n}\r\n\r\n.user-message {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.message-content {\r\n  margin: 0 12px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  max-width: 70%;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.user-message .message-content {\r\n  background-color: #409eff;\r\n  color: white;\r\n}\r\n\r\n.ai-message .message-content {\r\n  background-color: #f4f4f5;\r\n  color: #333;\r\n}\r\n\r\n.input-area {\r\n  padding: 20px;\r\n  border-top: 1px solid #dcdfe6;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.input-area .el-textarea {\r\n  flex: 1;\r\n}\r\n\r\n.user-avatar {\r\n  background-color: #409eff;\r\n  color: white;\r\n}\r\n\r\n.ai-avatar {\r\n  background-color: #67c23a;\r\n  color: white;\r\n}\r\n</style>"],"mappings":";AA4BA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AAC9C,SAASC,UAAU,EAAEC,OAAM,QAAS,yBAAyB;AAC7D,OAAOC,IAAG,MAAO,mBAAmB;AACpC,SAASC,SAAQ,QAAS,cAAc;AAExC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,SAAQ,GAAIV,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMW,OAAM,GAAIX,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMY,gBAAe,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAElC,MAAMa,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,MAAMX,QAAQ,CAAC,CAAC;MAChB,MAAMY,SAAQ,GAAIF,gBAAgB,CAACG,KAAK;MACxC,IAAID,SAAS,EAAE;QACbA,SAAS,CAACE,SAAQ,GAAIF,SAAS,CAACG,YAAY;MAC9C;IACF,CAAC;IAED,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACR,SAAS,CAACK,KAAK,CAACI,IAAI,CAAC,KAAKR,OAAO,CAACI,KAAK,EAAE;;MAE9C;MACAN,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;QAClBC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEZ,SAAS,CAACK,KAAK,CAACI,IAAI,CAAC;MAChC,CAAC,CAAC;MAEFR,OAAO,CAACI,KAAI,GAAI,IAAI;MACpB,IAAI;QACF;QACA,MAAMQ,QAAO,GAAI,MAAMlB,IAAI,CAACK,SAAS,CAACK,KAAK,CAACI,IAAI,CAAC,CAAC,CAAC;;QAEnD;QACAV,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;UAClBC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEC;QACX,CAAC,CAAC;QAEFb,SAAS,CAACK,KAAI,GAAI,EAAE;QACpB,MAAMF,cAAc,CAAC,CAAC;MACxB,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BlB,SAAS,CAACkB,KAAK,CAAC,YAAY,CAAC;MAC/B,UAAU;QACRb,OAAO,CAACI,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAEDd,SAAS,CAAC,MAAM;MACd;MACAQ,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;QAClBC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLb,QAAQ;MACRC,SAAS;MACTC,OAAO;MACPC,gBAAgB;MAChBC,cAAc;MACdK,WAAW;MACXf,UAAU;MACVC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}